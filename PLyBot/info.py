import asyncio
from typing import Union

import discord
from discord.ext import commands

from .bot import Bot, Cog, Context
from .const import ALL_GOOD_TYPES


class InfoCog(Cog, name="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"):
    def __init__(self, bot: Bot):
        super().__init__(bot, emoji_icon='üìå')

        help_cmd: commands.Command = self.bot.get_command("help")
        help_cmd.name = '—Ö–µ–ª–ø'
        help_cmd.aliases = list(set(help_cmd.aliases) | {"–ø–æ–º–æ—â—å", "help", "h", "?"})
        help_cmd.cog = self
        help_cmd.help = '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –∏–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'

        self.bot.reload_command('help')

    @commands.Cog.listener('on_message')
    async def on_mention(self, message: discord.Message):
        if not self.bot.is_ready():
            return
        if self.bot.user.mentioned_in(message) and len(message.content.split()) == 1:
            await self.bot.get_command("info").invoke(await self.bot.get_context(message))

    @commands.command(name="–∏–Ω—Ñ–æ", aliases=["info", "i", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "about"])
    async def info(self, ctx: Context):
        """
        –í—ã–¥–∞—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        """
        bot: Bot = ctx.bot
        owner = bot.get_user(403910550028943361)
        embed = discord.Embed(
            title=str(self.bot.user.name),
            colour=self.bot.colour_embeds,
            description=(
                f"–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç {self.bot.name}! –Ø –±–æ—Ç —Å –æ–≥—Ä–æ–º–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –∏ —Ä–∞–∑–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏.\n"
                f"\n"
                f"–ú–æ–π –ø—Ä–µ—Ñ–∏–∫—Å `{self.bot.command_prefix}`, –Ω–æ —Ç—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ @–æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫–æ –º–Ω–µ. "
                f"–í–∑–≥–ª—è–Ω–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É `{self.bot.command_prefix}{self.bot.get_command('help')}`"
                f"–¥–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–ø–∏—Å–∞—Ç—å '?'.\n"
                f"||–Ω–∞–ø—Ä–∏–º–µ—Ä `{self.bot.command_prefix}–∏–Ω—Ñ–æ ?` –∏–ª–∏ `{self.bot.command_prefix}"
                f"{self.bot.get_command('help')} –∏–Ω—Ñ–æ`||"
            )
        )
        embed.add_field(name="–°–±–æ—Ä–∫–∞", value=self.bot.version)
        embed.set_thumbnail(url=bot.user.avatar_url)
        if isinstance(owner, discord.User):
            embed.set_author(name=owner.name, icon_url=owner.avatar_url)
            if self.bot.footer:
                embed.set_footer(text=self.bot.footer[0], icon_url=self.bot.footer[1])
            embed.add_field(name="–ú–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", value=f"{owner}")
            embed.set_image(
                url="https://cdn.discordapp.com/attachments/653543360161644545/911597130412593162/Master_.png")
        await asyncio.sleep(1.5)
        await ctx.reply(embed=embed)

    @commands.command(name="–ø–∏–Ω–≥", aliases=["ping"])
    async def ping(self, ctx: Context):
        """
        –í—ã—Å—ã–ª–∞–µ—Ç –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –±–æ—Ç–æ–º –∏ Discord
        """
        await ctx.reply(embed=discord.Embed(title="–ü–æ–Ω–≥!", description=f"–ó–∞–¥–µ—Ä–∂–∫–∞ {round(self.bot.latency, 3) * 1000} "
                                                                       f"–º—Å.",
                                            colour=self.bot.colour_embeds))

    @commands.command(name="–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å", aliases=["invite"])
    async def invite(self, ctx: Context):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –±–æ—Ç–∞
        """
        link = await ctx.bot.invite_link
        await ctx.reply(embed=discord.Embed(
            title="–ù–∞–∂–º–∏ —Å—é–¥–∞ —á—Ç–æ–±—ã –º–µ–Ω—è –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä", url=link,
            colour=ctx.bot.colour_embeds).set_thumbnail(url=ctx.bot.user.avatar_url))

    @commands.command(name="—Å–µ—Ä–≤–µ—Ä", aliases=['server'])
    async def _cmd_server(self, ctx: Context):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –≤–ª–∞–¥–µ–ª—å—Ü–∞, —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ."""
        guild = ctx.guild

        statuses = list(map(lambda m: m.status, guild.members))
        types = list(map(lambda m: m.bot, guild.members))

        embed = discord.Embed(
            title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ {guild}", colour=self.bot.colour_embeds).set_thumbnail(url=guild.icon_url)
        embed.add_field(name="–£—á–∞—Å—Ç–Ω–∏–∫–∏", value=f"\\üë• –í—Å–µ–≥–æ: **{guild.member_count}**\n"
                                                f"\\üë§ –õ—é–¥–µ–π: **{types.count(False)}**\n"
                                                f"\\ü§ñ –ë–æ—Ç–æ–≤: **{types.count(True)}**")

        statuses_text = ""
        count_online = statuses.count(discord.Status.online)
        count_idle = statuses.count(discord.Status.idle)
        count_dnd = statuses.count(discord.Status.dnd)
        count_offline = statuses.count(discord.Status.offline)
        if count_online:
            statuses_text += f"\\üü¢ –í —Å–µ—Ç–∏: **{count_online}**\n"
        if count_idle:
            statuses_text += f"\\üü† –ù–µ –∞–∫—Ç–∏–≤–µ–Ω: **{count_idle}**\n"
        if count_dnd:
            statuses_text += f"\\üî¥ –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å: **{count_dnd}**\n"
        if count_offline:
            statuses_text += f"\\‚ö´ –ù–µ –≤ —Å–µ—Ç–∏: **{count_offline}**\n"
        embed.add_field(name="–ü–æ —Å—Ç–∞—Ç—É—Å–∞–º:", value=statuses_text)

        channels_text = f"\\üí¨ –í—Å–µ–≥–æ: {guild.channels.__len__()}\n"
        if guild.text_channels:
            channels_text += f"**#** –¢–µ–∫—Å—Ç–æ–≤—ã—Ö: **{guild.text_channels.__len__()}**\n"
        if guild.voice_channels:
            channels_text += f"\\üîä –ì–æ–ª–æ—Å–æ–≤—ã—Ö: **{guild.voice_channels.__len__()}**\n"
        if guild.stage_channels:
            channels_text += f"\\üì£ Stage: **{guild.stage_channels.__len__()}**\n"
        embed.add_field(name="–ö–∞–Ω–∞–ª—ã:", value=channels_text)

        embed.add_field(name="–í–ª–∞–¥–µ–ª–µ—Ü", value=str(guild.owner))
        embed.add_field(name="–£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–≤–µ—Ä–∫–∏:", value=str(guild.mfa_level or "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"))
        embed.add_field(name="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:", value=str(guild.created_at.date()))
        embed.set_footer(text=f"ID: {guild.id}")

        await ctx.reply(embed=embed)

    @commands.command(name="–∏–Ω–≤–∞–π—Ç–∏–Ω—Ñ–æ", aliase=['inviteinfo'], enabled=False)
    async def _cmd_invite_info(self, ctx: Context):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Å—ã–ª–∫–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏"""

    # TODO: –∑–∞–≥–ª—É—à–µ–Ω–æ –Ω–∞ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç
    @commands.command(name="—Å–∏–Ω—Ç–∞–∫—Å", aliases=["syntax"], enabled=False)
    async def syntax(self, ctx: Context):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        embed = discord.Embed(
            title="–°–ø—Ä–∞–≤–∫–∞ –ø–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∫–æ–º–∞–Ω–¥",
            colour=self.bot.colour_embeds,
            description="–ü—Ä–∏–≤–µ—Ç! –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –º–æ–µ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∫–æ–º–∞–Ω–¥ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ–µ.\n"
                        "–í—Å–µ –∫–æ–º–∞–Ω–¥—ã —Å–æ—Å—Ç–æ—è—Ç –∏–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞, –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.\n"
                        "–í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è "
        )
        await ctx.send(embed=embed)

    @commands.command(name="—á–µ–∫—Å–∏–Ω—Ç–∞–∫—Å", aliases=["checksyntax"], enabled=False)
    async def check_syntax(self, ctx: Context, *args: ALL_GOOD_TYPES):
        """
        –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–æ–≥–æ —á—Ç–æ –ø–æ–ª—É—á–∏—Ç –∫–æ–º–∞–Ω–¥–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10 –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        """

        # TODO: –ü–æ—Ñ–∏–∫—Å–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É (–Ω–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Ç–∏–ø)

        embed = discord.Embed(
            title="–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ã",
            description="–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Å –∏—Ö —Ç–∏–ø–∞–º–∏",
            colour=self.bot.colour_embeds
        )
        for i, arg in enumerate(args[:10]):
            embed.add_field(name=f"{i + 1}. {type(arg)}", value=arg)
        await ctx.send(embed=embed)

    @commands.command(name="–≤–∏–¥—è—Ç", aliases=['see'], enabled=False)
    async def have_access(self, ctx: Context,
                          channel: Union[discord.VoiceChannel, discord.TextChannel, discord.StageChannel]):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥—è—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª
        """
        result = set()
        for member in ctx.guild.members:
            member: discord.Member
            if member.permissions_in(channel).view_channel:
                result.add(member.mention)

        count = 15
        emb = discord.Embed(
            title=f"–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–º–µ—é—â–∏—Ö –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É",
            colour=self.bot.colour_embeds,
            description=(
                    "\n".join(list(result)[:count]) +
                    ("" if len(result) - count < 0 else "\n... +" + str(len(result) - count)))
        )

        emb.add_field(name="–í—Å–µ–≥–æ", value=str(len(result)))
        emb.add_field(name="–ö–∞–Ω–∞–ª", value=channel.mention)
        await ctx.send(embed=emb)

    @commands.command(name="–ø—Ä–µ—Ñ–∏–∫—Å", aliases=['prefix'], enabled=False)
    async def set_prefix(self, ctx: Context, prefix: str):
        pass


def setup(bot: Bot):
    bot.add_cog(InfoCog(bot))
