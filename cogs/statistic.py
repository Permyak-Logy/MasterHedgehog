from datetime import datetime

import discord
import sqlalchemy
from discord.ext import commands

from PLyBot import Bot, Cog, HRF, Context, BotEmbed
from db_session import SqlAlchemyBase, BaseConfigMix


class StatisticConfig(SqlAlchemyBase, BaseConfigMix):
    __tablename__ = "statistic_configs"

    guild_id = sqlalchemy.Column(sqlalchemy.Integer, sqlalchemy.ForeignKey('guilds.id'),
                                 primary_key=True, nullable=False)
    access = sqlalchemy.Column(sqlalchemy.String, nullable=False, default='{}')
    active_until = sqlalchemy.Column(sqlalchemy.Date, nullable=True, default=None)


# TODO: –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ 2 –Ω–µ–¥–µ–ª–∏
class StatisticCog(Cog, name='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'):
    """
    –ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–µ–π!
    """

    def __init__(self, bot: Bot):
        super().__init__(bot, cls_config=StatisticConfig, emoji_icon='üìä')

    @commands.group('stats')
    async def group_stats(self, ctx: Context):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        await ctx.just_send_help()

    @group_stats.command('guild', enabled=False)
    @commands.guild_only()
    async def cmd_stats_guild(self, ctx: Context):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Ä–≤–µ—Ä–∞
        """
        embed = BotEmbed(ctx=ctx, title=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ {ctx.me.display_name}", colour=self.bot.colour)
        embed.set_thumbnail(url=ctx.me.avatar_url)
        count_members = len(ctx.guild.members)
        count_bots = len(list(filter(lambda x: not x.bot, ctx.guild.members)))

        embed.add_field(
            name="–£—á–∞—Å—Ç–Ω–∏–∫–∏",
            value=(f"–í—Å–µ–≥–æ - {count_members}\n"
                   f"–õ—é–¥–µ–π - {count_members - count_bots}\n"
                   f"–ë–æ—Ç–æ–≤ - {count_bots}"))

        embed.add_field(
            name="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
            value=(f"–í —Å–µ—Ç–∏ - {1}\n"
                   f"–ù–µ –∞–∫—Ç–∏–≤–Ω—ã - {2}\n"
                   f"–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å - {3}\n"
                   f"–ù–µ –≤ —Å–µ—Ç–∏ - {4}"))

        embed.add_field(
            name="–ö–∞–Ω–∞–ª—ã",
            value=(f"–ö–∞—Ç–µ–≥–æ—Ä–∏–π - {1}\n"
                   f"–ö–∞–Ω–∞–ª–æ–≤ - {2}\n"
                   f"–¢–µ—Å—Ç–æ–≤—ã—Ö - {3}\n"
                   f"–ì–æ–ª–æ—Å–æ–≤—ã—Ö - {4}\n"
                   f""))

        await ctx.send(embed=embed)

    @group_stats.command('role', enabled=False)
    @commands.guild_only()
    async def cmd_stats_role(self, ctx: Context, _: discord.Role):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–æ–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        """
        await ctx.just_send_help()

    @group_stats.command('bot')
    async def cmd_stats_bot(self, ctx: Context):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞
        """

        embed = BotEmbed(ctx=ctx, title=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ {ctx.me.display_name}", colour=self.bot.colour)
        embed.set_thumbnail(url=ctx.me.avatar_url)
        embed.add_field(name="–°–µ—Ä–≤–µ—Ä–æ–≤ –ø–æ–¥ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ–º", value=str(len(self.bot.guilds)))
        embed.add_field(name="–ö–∞–Ω–∞–ª–æ–≤ –ø–æ–¥ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ–º", value=str(len(set(self.bot.get_all_channels()))))
        embed.add_field(name="–õ—é–¥–µ–π –ø–æ–¥ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ–º", value="\\üë• " + str(len(self.bot.users)))
        embed.add_field(name="–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∫–æ–º–∞–Ω–¥", value=str(self.bot.count_invokes + 1))

        embed.add_field(name="–í–æ–∑—Ä–∞—Å—Ç",
                        value=HRF.time(datetime.now() - self.bot.user.created_at, sep=" ", medium=False) or "-")
        embed.add_field(name="–†–∞–±–æ—Ç–∞–µ—Ç", value=HRF.time(datetime.now() - self.bot.started) or "-")

        embed.add_field(name="–ú–æ–¥—É–ª–µ–π", value=str(len(self.bot.cogs)))
        embed.add_field(name="–ö–æ–º–∞–Ω–¥", value=str(len(self.bot.commands)))

        await ctx.send(embed=embed)


def setup(bot: Bot):
    bot.add_cog(StatisticCog(bot))
